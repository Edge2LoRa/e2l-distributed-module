# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import e2gw_rpc_client.edge2gateway_pb2 as edge2gateway__pb2


class Edge2GatewayStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.handle_ed_pub_info = channel.unary_unary(
            "/edge2gateway.Edge2Gateway/handle_ed_pub_info",
            request_serializer=edge2gateway__pb2.EdPubInfo.SerializeToString,
            response_deserializer=edge2gateway__pb2.GwInfo.FromString,
        )
        self.update_aggregation_params = channel.unary_unary(
            "/edge2gateway.Edge2Gateway/update_aggregation_params",
            request_serializer=edge2gateway__pb2.AggregationParams.SerializeToString,
            response_deserializer=edge2gateway__pb2.GwResponse.FromString,
        )
        self.remove_e2device = channel.unary_unary(
            "/edge2gateway.Edge2Gateway/remove_e2device",
            request_serializer=edge2gateway__pb2.E2LDeviceInfo.SerializeToString,
            response_deserializer=edge2gateway__pb2.E2LData.FromString,
        )
        self.add_devices = channel.unary_unary(
            "/edge2gateway.Edge2Gateway/add_devices",
            request_serializer=edge2gateway__pb2.E2LDevicesInfoComplete.SerializeToString,
            response_deserializer=edge2gateway__pb2.GwResponse.FromString,
        )
        self.set_active = channel.unary_unary(
            "/edge2gateway.Edge2Gateway/set_active",
            request_serializer=edge2gateway__pb2.ActiveFlag.SerializeToString,
            response_deserializer=edge2gateway__pb2.GwResponse.FromString,
        )


class Edge2GatewayServicer(object):
    """Missing associated documentation comment in .proto file."""

    def handle_ed_pub_info(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def update_aggregation_params(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def remove_e2device(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def add_devices(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def set_active(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_Edge2GatewayServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "handle_ed_pub_info": grpc.unary_unary_rpc_method_handler(
            servicer.handle_ed_pub_info,
            request_deserializer=edge2gateway__pb2.EdPubInfo.FromString,
            response_serializer=edge2gateway__pb2.GwInfo.SerializeToString,
        ),
        "update_aggregation_params": grpc.unary_unary_rpc_method_handler(
            servicer.update_aggregation_params,
            request_deserializer=edge2gateway__pb2.AggregationParams.FromString,
            response_serializer=edge2gateway__pb2.GwResponse.SerializeToString,
        ),
        "remove_e2device": grpc.unary_unary_rpc_method_handler(
            servicer.remove_e2device,
            request_deserializer=edge2gateway__pb2.E2LDeviceInfo.FromString,
            response_serializer=edge2gateway__pb2.E2LData.SerializeToString,
        ),
        "add_devices": grpc.unary_unary_rpc_method_handler(
            servicer.add_devices,
            request_deserializer=edge2gateway__pb2.E2LDevicesInfoComplete.FromString,
            response_serializer=edge2gateway__pb2.GwResponse.SerializeToString,
        ),
        "set_active": grpc.unary_unary_rpc_method_handler(
            servicer.set_active,
            request_deserializer=edge2gateway__pb2.ActiveFlag.FromString,
            response_serializer=edge2gateway__pb2.GwResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "edge2gateway.Edge2Gateway", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class Edge2Gateway(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def handle_ed_pub_info(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/edge2gateway.Edge2Gateway/handle_ed_pub_info",
            edge2gateway__pb2.EdPubInfo.SerializeToString,
            edge2gateway__pb2.GwInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def update_aggregation_params(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/edge2gateway.Edge2Gateway/update_aggregation_params",
            edge2gateway__pb2.AggregationParams.SerializeToString,
            edge2gateway__pb2.GwResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def remove_e2device(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/edge2gateway.Edge2Gateway/remove_e2device",
            edge2gateway__pb2.E2LDeviceInfo.SerializeToString,
            edge2gateway__pb2.E2LData.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def add_devices(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/edge2gateway.Edge2Gateway/add_devices",
            edge2gateway__pb2.E2LDevicesInfoComplete.SerializeToString,
            edge2gateway__pb2.GwResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def set_active(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/edge2gateway.Edge2Gateway/set_active",
            edge2gateway__pb2.ActiveFlag.SerializeToString,
            edge2gateway__pb2.GwResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
